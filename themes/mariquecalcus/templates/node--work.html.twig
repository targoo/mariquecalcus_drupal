{#
/**
 * @file
 * Bartik's theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Formatted creation date. Preprocess functions can reformat
       it by calling format_date() with the desired parameters on
 *     $variables['node']->getCreatedTime().
 *   - promoted: Whether the node is promoted to the front page.
 *   - sticky: Whether the node is 'sticky'. Sticky nodes are ordered above
 *     other non-sticky nodes in teaser listings
 *   - published: Whether the node is published.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to exclude the printing of a
 *   given child element.
 * - user_picture: The node author's picture from user-picture.html.twig.
 * - date: Formatted creation date. Preprocess functions can reformat it by
 *   calling format_date() with the desired parameters on
 *   $variables['created'].
 * - name: Themed username of node author output from theme_username().
 * - node_url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - submitted: Submission information created from name and date during
 *   template_preprocess_node().
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node-[type]: The current node type. For example, if the node is a
 *     "Article" it would result in "node-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - view-mode-[view_mode]: The View Mode of the node; for example, a teaser
 *     would result in: "view-mode-teaser", and full: "view-mode-full".
 *   - preview: Whether a node is in preview mode.
 *   The following are controlled through the node publishing options.
 *   - promoted: Appears on nodes promoted to the front page.
 *   - sticky: Appears on nodes ordered above other non-sticky nodes in teaser
 *     listings.
 *   - unpublished: Appears on unpublished nodes visible only to site admins.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - is_front: Flag for front. Will be true when presented on the front page.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * In field variables, each field instance attached to the node a corresponding
 * variable is defined; for example, 'node.body' becomes 'body'. When needing to
 * access a field's raw values, developers/themers are strongly encouraged to
 * use these variables. Otherwise they will have to explicitly specify the
 * desired field language; for example, 'node.body.en', thus overriding any
 * language negotiation rule that may have been applied previously.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}

<!--ol>
  {% for key, value in content  %}
    <li>{{ key }}</li>
  {% endfor %}
</ol-->


<div id="secondnav">
  <ul class="menu"><li class="menu__item is-expanded first expanded"><a href="/jqgrid" class="menu__link sf-depth-1 menuparent">Jqgrid</a><ul class="menu"><li class="menu__item is-leaf first leaf"><a href="/jqgrid/basic" class="menu__link">Basic</a></li>
        <li class="menu__item is-leaf leaf"><a href="/jqgrid/basic/scrolling" class="menu__link">Basic + Dynamic Scrolling</a></li>
        <li class="menu__item is-leaf leaf"><a href="/jqgrid/basic/scrolling/ajax" class="menu__link">Basic + Dynamic Scrolling + Ajax</a></li>
        <li class="menu__item is-leaf leaf"><a href="/jqgrid/grouping" class="menu__link">Grouping</a></li>
        <li class="menu__item is-leaf leaf"><a href="/jqgrid/grouping/ajax" class="menu__link">Grouping + Ajax</a></li>
        <li class="menu__item is-leaf leaf"><a href="/jqgrid/grouping/scrolling" class="menu__link">Grouping + Dynamic scrolling</a></li>
        <li class="menu__item is-leaf last leaf"><a href="/jqgrid/grouping/ajax/scrolling" class="menu__link">Grouping + Ajax + Dynamic scrolling</a></li>
      </ul></li>
    <li class="menu__item is-expanded expanded"><a href="/twitterfield_pull" class="menu__link sf-depth-1 menuparent">TwitterField Pull</a><ul class="menu"><li class="menu__item is-leaf first leaf"><a href="/twitterfield-pull/all" class="menu__link">Twitter Pull All</a></li>
        <li class="menu__item is-leaf leaf"><a href="/twitterfield-pull/muse" class="menu__link">Twitter Pull Muse</a></li>
        <li class="menu__item is-leaf leaf"><a href="/twitterfield-pull/metallica" class="menu__link">Twitter Pull Metallica</a></li>
        <li class="menu__item is-leaf leaf"><a href="/twitterfield-pull/rihanna" class="menu__link">Twitter Pull Rihanna</a></li>
        <li class="menu__item is-leaf last leaf"><a href="/twitterfield-pull/test" class="menu__link">Twitter Pull #test</a></li>
      </ul></li>
    <li class="menu__item is-expanded expanded"><a href="/color_field" class="menu__link sf-depth-1 menuparent">Color Field</a><ul class="menu"><li class="menu__item is-leaf first leaf"><a href="/node/2117" class="menu__link sf-depth-2">Color (Plain Text)</a></li>
        <li class="menu__item is-leaf leaf"><a href="/color_field/pre-selected_color_boxes" class="menu__link sf-depth-2">Pre-selected Color Boxes</a></li>
        <li class="menu__item is-leaf leaf"><a href="/color_field/multiple_pre-selected_color_boxes" class="menu__link sf-depth-2">Multiple Pre-selected Color Boxes</a></li>
        <li class="menu__item is-leaf leaf"><a href="/color_field/jquery_simple_color" class="menu__link sf-depth-2">jQuery Simple Color</a></li>
        <li class="menu__item is-leaf leaf"><a href="/spectrum-color-picker" class="menu__link sf-depth-2">Spectrum Color Picker</a></li>
        <li class="menu__item is-leaf leaf"><a href="/color_field/field_collection1" class="menu__link sf-depth-2">Field Collection (Pre-selected Color Boxes)</a></li>
        <li class="menu__item is-leaf leaf"><a href="/color_field/field_collection2" class="menu__link sf-depth-2">Field Collection (jQuery Simple Color)</a></li>
        <li class="menu__item is-leaf leaf"><a href="/color_field/field_collection3" class="menu__link sf-depth-2">Field Collection (jQuery Spectrum Color)</a></li>
        <li class="menu__item is-leaf last leaf"><a href="/color_field/view_color" class="menu__link">Color in views</a></li>
      </ul></li>
    <li class="menu__item is-leaf leaf"><a href="/node/2122" title="Entity Email" class="menu__link sf-depth-1">Entity Email</a></li>
    <li class="menu__item is-expanded expanded"><a href="/node/2110" class="menu__link sf-depth-1 menuparent">Field TimeTable</a><ul class="menu"><li class="menu__item is-leaf first leaf"><a href="/node/2111" class="menu__link sf-depth-2">Timetable 1</a></li>
        <li class="menu__item is-leaf last leaf"><a href="/field-timetable" class="menu__link">Timetable view</a></li>
      </ul></li>
    <li class="menu__item is-expanded last expanded"><a href="/views_complex_grouping" title="Views Complex Grouping" class="menu__link sf-depth-1 menuparent">Views Complex Grouping</a><ul class="menu"><li class="menu__item is-leaf first leaf"><a href="/views-complex-grouping/example1" class="menu__link">Example 1</a></li>
        <li class="menu__item is-leaf leaf"><a href="/views-complex-grouping/example2" class="menu__link">Example 2</a></li>
        <li class="menu__item is-leaf last leaf"><a href="/views-complex-grouping/example3" class="menu__link">Example 3</a></li>
      </ul></li>
  </ul>
</div>


<article id="node-{{ node.id }}" class="{{ attributes.class}} clearfix"{{ attributes }} role="article">

  <aside class="aside">
    {{ content.field_highlight }}
  </aside>

  <div class="image">
    {{ content.field_image }}
  </div>

  <div class="content clearfix"{{ content_attributes }}>
    {{ content|without('field_image','field_highlight') }}

    {% if view_mode == 'teaser' %}
      <a href="{{ node_url }}">Read More</a>
    {% endif %}

  </div>

  <footer>
  </footer>

</article>
